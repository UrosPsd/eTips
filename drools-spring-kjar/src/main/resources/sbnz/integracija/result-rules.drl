package com.etips;

import com.etips.models.Player;
import com.etips.models.InputState;
import com.etips.models.Game;
import com.etips.models.enums.ClubDefense;
import com.etips.models.enums.CourtType;
import com.etips.models.enums.PlayerForm;
import com.etips.models.enums.SeasonPart;
import com.etips.models.enums.ResultState;

rule "rule-one"
	when
		$i: InputState( $player: player, $games: player.gamesPlayed, $opposingClub: opposingClub, $averagePointsBet: averagePointsBet, $sp: seasonPart )
		accumulate (
			Game(
				$opposingClub == opposingClub,
				$sp == SeasonPart.REGULAR,
				points > $averagePointsBet
			) from $games,
			$averageAgainstClub: count()
		)
		eval($games.size() == $averageAgainstClub)
	then
		System.out.println("Siguran plus");
		modify($i) { setResultState(ResultState.PLUS); }
end

rule "rule-two"
	when
		$i: InputState(
			resultState == ResultState.NA,
			formCalculated == true,
			$pointsBet: averagePointsBet,
			player.playerForm == PlayerForm.EXTREMELY_OUT_OF_FORM,
			opposingClub.clubDefense ==  ClubDefense.EXCELENT_DEFENSE,
			courtType == CourtType.AWAY_COURT
		)
	then
		System.out.println("Siguran minus");
		modify($i) { setResultState(ResultState.MINUS); }
end

rule "rule3"
	when
		$i: InputState(
			resultState == ResultState.NA,
			formCalculated == true,
			$pointsBet: averagePointsBet,
			player.playerForm == PlayerForm.IN_FORM,
			opposingClub.clubDefense ==  ClubDefense.BAD_DEFENSE,
			courtType == CourtType.HOME_COURT
		)
	then
		System.out.println("Lagani plus");
		modify($i) { setResultState(ResultState.PLUS); }
end